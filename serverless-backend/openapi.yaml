openapi: "3.0.0"
info:
  title: ${title}
  version: "1.0.0"
  description: "Shawn's API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "jlee.yvr96@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: "Areas"
    description: "地域"
  - name: "Locations"
    description: "場所"

paths:
  /user/areas:
    get:
      tags:
        - ""
      summary: "登録された地域一覧を取得"
      responses:
        200:
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Area"
      x-amazon-apigateway-integration:
        uri: ${get_area_function_invoke_arn}
        httpMethod: "POST"
        type: "aws_proxy"
    options:
      description: Allow CORS
      responses:
        200:
          $ref: '#/components/responses/cors'
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: "{ \"statusCode\": 200 }"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
  /user/locations:
    get:
      tags:
        - ""
      summary: "登録された場所一覧を取得"
      responses:
        200:
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Area"
      x-amazon-apigateway-integration:
        uri: ${get_locations_function_invoke_arn}
        httpMethod: "POST"
        type: "aws_proxy"
    options:
      description: Allow CORS
      responses:
        200:
          $ref: '#/components/responses/cors'
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: "{ \"statusCode\": 200 }"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"

components:
  schemas:
    Area:
      type: "object"
      properties:
        area_name:
          type: "string"
          description: ""
    Area:
      type: "object"
      properties:
        area_name:
          type: "string"
          description: ""


  responses:
    cors:
      description: "200 response"
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: "string"
        Access-Control-Allow-Methods:
          schema:
            type: "string"
        Access-Control-Max-Age:
          schema:
            type: "string"
        Access-Control-Allow-Headers:
          schema:
            type: "string"
      content:
        application/json:
          schema:
            type: string

